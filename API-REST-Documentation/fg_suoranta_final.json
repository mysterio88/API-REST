{
  "openapi": "3.1.0",
  "info": {
    "title": "fg_suoranta_final",
    "version": "1.0",
    "description": "REST_API_finalGrade\n"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Create user/s",
        "operationId": "post-users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {}
              }
            }
          }
        },
        "description": "To create user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "e-mail": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "username",
                  "name",
                  "e-mail",
                  "password"
                ]
              },
              "examples": {}
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            },
            "text/html": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/users/{userid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "userid",
          "in": "path",
          "required": true,
          "description": "Unique id of the user to be deleted"
        }
      ],
      "get": {
        "summary": "Get info of specific user",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-users-userid",
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "description": "All users"
      },
      "delete": {
        "summary": "Delete user",
        "operationId": "delete-users-userid",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User id not found"
          }
        },
        "description": "Delete user/s "
      },
      "put": {
        "summary": "",
        "operationId": "put-users-userid",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInfo"
              }
            }
          }
        },
        "description": "create users"
      }
    },
    "/items": {
      "get": {
        "summary": "Get info about all items",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fg_api_Item"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-items",
        "description": "Info about all the items on sale"
      },
      "post": {
        "summary": "Add item",
        "operationId": "post-items",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "itemId": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fg_api_Item"
              }
            }
          }
        },
        "description": "Create a new item",
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/items/{itemid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "itemid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Info of the item",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fg_api_Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-items-itemid",
        "description": "Info of the item"
      },
      "delete": {
        "summary": "Delete item",
        "operationId": "delete-items-itemid",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      },
      "put": {
        "summary": "Modify item",
        "operationId": "put-items-itemid",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fg_api_Item"
              }
            }
          }
        },
        "description": "Modify items"
      }
    },
    "/items/search": {
      "get": {
        "summary": "Search items",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/fg_api_Item"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-items-search",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Category"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Location"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "Date of posting"
          }
        ],
        "description": "Search for the items"
      }
    }
  },
  "components": {
    "schemas": {
      "UserInfo": {
        "title": "UserInfo",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "e-mail": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "name",
          "e-mail"
        ]
      },
      "ErrorResponse": {
        "title": "ErrorResponse",
        "type": "object",
        "properties": {
          "errorDescription": {
            "type": "string"
          }
        }
      },
      "Item": {
        "title": "Item",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "Category": {
            "type": "string"
          },
          "Location": {
            "type": "object",
            "properties": {
              "Address": {
                "type": "string"
              },
              "Postal code": {
                "type": "string"
              }
            }
          },
          "Images": {
            "type": "string",
            "maxLength": 4,
            "minLength": 1
          },
          "Asking price": {
            "type": "string"
          },
          "Date of posting": {
            "type": "string",
            "format": "date-time"
          },
          "Delivery type": {
            "type": "string"
          },
          "Sellers info": {
            "$ref": "#/components/schemas/fg_api_User"
          }
        }
      },
      "fg_api_Item": {
        "title": "Item",
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string",
            "format": "date"
          },
          "ItemInfo": {
            "type": "object",
            "properties": {
              "Title": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              },
              "Category": {
                "type": "object",
                "properties": {
                  "Type": {
                    "type": "string"
                  }
                }
              },
              "Asking price": {
                "type": "number"
              },
              "Delivery_type": {
                "type": "object",
                "properties": {
                  "how_to_deliver": {
                    "type": "string"
                  }
                }
              },
              "Seller": {
                "$ref": "#/components/schemas/fg_api_User"
              }
            }
          }
        }
      },
      "fg_api_User": {
        "title": "User",
        "type": "object",
        "description": "",
        "examples": [
          {
            "id": 142,
            "firstName": "Alexandre",
            "lastName": "Wagner",
            "email": "alex-wagner@gmail.com",
            "dateOfBirth": "1985-01-31",
            "emailVerified": true,
            "signUpDate": "2011-01-14"
          }
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "e-mail": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "e-mail"
        ]
      }
    },
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}